import { useState } from 'react';
import { BookOpen, Upload, Sparkles, Target } from 'lucide-react';
import { Card } from '@/components/ui/card';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { FileUpload } from '@/components/FileUpload';
import { TopicSearch } from '@/components/TopicSearch';
import { QuestionList } from '@/components/QuestionList';
import { QuestionDetail } from '@/components/QuestionDetail';
import { Question, QuizState } from '@/types/quiz';

const Index = () => {
  const [quizState, setQuizState] = useState<QuizState>({
    questions: [],
    selectedQuestion: null,
    showAnswer: false,
  });

  const handleQuestionsLoaded = (newQuestions: Question[]) => {
    setQuizState(prev => ({
      ...prev,
      questions: [...prev.questions, ...newQuestions],
    }));
  };

  const handleClearAutoGenerated = () => {
    setQuizState(prev => ({
      ...prev,
      questions: prev.questions.filter(q => !q.id.startsWith('generated-')),
      selectedQuestion: prev.selectedQuestion && prev.selectedQuestion.id.startsWith('generated-') ? null : prev.selectedQuestion,
    }));
  };

  const handleClearUploaded = () => {
    setQuizState(prev => ({
      ...prev,
      questions: prev.questions.filter(q => q.id.startsWith('generated-')),
      selectedQuestion: prev.selectedQuestion && !prev.selectedQuestion.id.startsWith('generated-') ? null : prev.selectedQuestion,
    }));
  };

  const handleQuestionSelect = (question: Question) => {
    setQuizState(prev => ({
      ...prev,
      selectedQuestion: question,
      showAnswer: false,
    }));
  };

  const handleToggleAnswer = () => {
    setQuizState(prev => ({
      ...prev,
      showAnswer: !prev.showAnswer,
    }));
  };

  return (
    <div className="min-h-screen bg-background">
      {/* Hero Section */}
      <div className="bg-quiz-gradient text-white">
        <div className="container mx-auto px-4 py-16">
          <div className="text-center max-w-4xl mx-auto">
            <div className="flex justify-center mb-6">
              <div className="p-4 bg-white/10 rounded-full backdrop-blur-sm">
                <Target className="h-12 w-12" />
              </div>
            </div>
            <h1 className="text-4xl md:text-6xl font-bold mb-6 leading-tight">
              Product Management
              <span className="block text-white/90">Quiz Platform</span>
            </h1>
            <p className="text-xl text-white/90 mb-8 leading-relaxed">
              Upload Excel files or generate questions from topics to create engaging 
              product management quizzes. Perfect for interviews, training, and skill assessment.
            </p>
            <div className="flex flex-wrap justify-center gap-4 text-sm">
              <div className="flex items-center gap-2 bg-white/10 px-4 py-2 rounded-full backdrop-blur-sm">
                <Upload className="h-4 w-4" />
                Excel Upload
              </div>
              <div className="flex items-center gap-2 bg-white/10 px-4 py-2 rounded-full backdrop-blur-sm">
                <Sparkles className="h-4 w-4" />
                Auto-Generation
              </div>
              <div className="flex items-center gap-2 bg-white/10 px-4 py-2 rounded-full backdrop-blur-sm">
                <BookOpen className="h-4 w-4" />
                Interactive Quiz
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="container mx-auto px-4 py-12">
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* Left Column - Input Methods */}
          <div className="space-y-8">
            <Tabs defaultValue="upload" className="w-full">
              <TabsList className="grid w-full grid-cols-2">
                <TabsTrigger value="upload" className="flex items-center gap-2">
                  <Upload className="h-4 w-4" />
                  Upload Excel
                </TabsTrigger>
                <TabsTrigger value="generate" className="flex items-center gap-2">
                  <Sparkles className="h-4 w-4" />
                  Generate
                </TabsTrigger>
              </TabsList>
              
              <TabsContent value="upload" className="mt-6">
                <FileUpload onQuestionsLoaded={handleQuestionsLoaded} onClear={handleClearUploaded} />
                <div className="mt-4 p-4 bg-muted/30 rounded-lg">
                  <h4 className="font-medium mb-2">Excel Format Requirements:</h4>
                  <ul className="text-sm text-muted-foreground space-y-1">
                    <li>• <strong>Question:</strong> The quiz question</li>
                    <li>• <strong>Answer:</strong> The complete answer</li>
                    <li>• <strong>Topic:</strong> Product management topic</li>
                    <li>• <strong>Difficulty Level:</strong> Easy, Medium, or Hard</li>
                  </ul>
                </div>
              </TabsContent>
              
              <TabsContent value="generate" className="mt-6">
                <TopicSearch onQuestionsGenerated={handleQuestionsLoaded} onClear={handleClearAutoGenerated} />
                <div className="mt-4 p-4 bg-muted/30 rounded-lg">
                  <h4 className="font-medium mb-2">Popular Topics:</h4>
                  <div className="flex flex-wrap gap-2 text-sm">
                    {['Product Strategy', 'User Research', 'Analytics', 'Roadmapping', 'Stakeholder Management', 'A/B Testing'].map(topic => (
                      <span key={topic} className="px-2 py-1 bg-background rounded border text-muted-foreground">
                        {topic}
                      </span>
                    ))}
                  </div>
                </div>
              </TabsContent>
            </Tabs>

            {/* Question List */}
            <QuestionList
              questions={quizState.questions}
              selectedQuestion={quizState.selectedQuestion}
              onQuestionSelect={handleQuestionSelect}
            />
          </div>

          {/* Right Column - Question Detail */}
          <div className="space-y-8">
            {quizState.selectedQuestion ? (
              <QuestionDetail
                question={quizState.selectedQuestion}
                showAnswer={quizState.showAnswer}
                onToggleAnswer={handleToggleAnswer}
              />
            ) : (
              <Card className="p-8 text-center border-2 border-dashed border-muted-foreground/30">
                <div className="flex flex-col items-center space-y-4">
                  <div className="p-4 bg-muted/30 rounded-full">
                    <BookOpen className="h-8 w-8 text-muted-foreground" />
                  </div>
                  <div>
                    <h3 className="text-lg font-medium mb-2">Select a Question</h3>
                    <p className="text-muted-foreground">
                      Choose a question from the list to view it in detail and reveal the answer.
                    </p>
                  </div>
                </div>
              </Card>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Index;